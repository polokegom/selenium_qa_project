/*
 * WeShare API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using Xunit;

using Applications.WeShare.Swagger.Client;
using Applications.WeShare.Swagger.Api;
// uncomment below to import models
//using Applications.WeShare.Swagger.Model;

namespace Applications.WeShare.Swagger.Test.Api
{
    /// <summary>
    ///  Class for testing PaymentRequestsApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    public class PaymentRequestsApiTests : IDisposable
    {
        private PaymentRequestsApi instance;

        public PaymentRequestsApiTests()
        {
            instance = new PaymentRequestsApi();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of PaymentRequestsApi
        /// </summary>
        [Fact]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsType' PaymentRequestsApi
            //Assert.IsType<PaymentRequestsApi>(instance);
        }

        /// <summary>
        /// Test CreatePaymentRequest
        /// </summary>
        [Fact]
        public void CreatePaymentRequestTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //NewPaymentRequestDTO newPaymentRequestDTO = null;
            //var response = instance.CreatePaymentRequest(newPaymentRequestDTO);
            //Assert.IsType<PaymentRequestDTO>(response);
        }

        /// <summary>
        /// Test FindAllPaymentRequests
        /// </summary>
        [Fact]
        public void FindAllPaymentRequestsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //var response = instance.FindAllPaymentRequests();
            //Assert.IsType<List<PaymentRequestDTO>>(response);
        }

        /// <summary>
        /// Test FindPaymentRequestsReceived
        /// </summary>
        [Fact]
        public void FindPaymentRequestsReceivedTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int personId = null;
            //var response = instance.FindPaymentRequestsReceived(personId);
            //Assert.IsType<List<PaymentRequestDTO>>(response);
        }

        /// <summary>
        /// Test FindPaymentRequestsSent
        /// </summary>
        [Fact]
        public void FindPaymentRequestsSentTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int personId = null;
            //var response = instance.FindPaymentRequestsSent(personId);
            //Assert.IsType<List<PaymentRequestDTO>>(response);
        }

        /// <summary>
        /// Test GetPaymentRequestById
        /// </summary>
        [Fact]
        public void GetPaymentRequestByIdTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int paymentRequestId = null;
            //var response = instance.GetPaymentRequestById(paymentRequestId);
            //Assert.IsType<PaymentRequestDTO>(response);
        }

        /// <summary>
        /// Test RecallUnpaidPaymentRequest
        /// </summary>
        [Fact]
        public void RecallUnpaidPaymentRequestTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int paymentRequestId = null;
            //instance.RecallUnpaidPaymentRequest(paymentRequestId);
        }
    }
}
